{
	"name": "binocular",
	"displayName": "Binocular",
	"publisher": "jpcrs",
	"description": "Not exactly a telescope, but it's useful sometimes. Extension to search/navigate through files and workspaces.",
	"repository": {
		"url": "https://github.com/jpcrs/Binocular"
	},
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.68.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:binocular.executeCommand"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "binocular.executeCommand",
				"title": "Binocular: Execute command"
			}
		],
		"configuration": {
			"title": "Binocular",
			"properties": {
				"binocular.general.additionalSearchLocations": {
					"description": "Additional search locations",
					"markdownDescription": "Search for files in these locations",
					"type": "array",
					"default": []
				},
				"binocular.general.useExternalTerminal": {
					"description": "Use external terminal",
					"markdownDescription": "Open in external terminal",
					"type": "boolean",
					"default": false
				},
				"binocular.command.externalTerminalCustomCommand": {
					"description": "External terminal custom command",
					"markdownDescription": "Command that will be used to open the terminal. Only applies when `#binocular.general.useExternalTerminal#` is `checked`. Default values are: **Mac:** `osascript -e 'tell app \"Terminal\" to do script \"ls\" & activate & do script \"#;exit\"`. **Window:** `start cmd /k \"# & exit /s\"`. **Linux:** `x-terminal-emulator -- sh -c \"#\"`. The __#__ is used for placeholder to the command that will be executed.",
					"type": "string"
				},
				"binocular.command.commands": {
					"description": "Commands",
					"type": "array",
					"default": [
						{
							"shellCommand": "rg --files --hidden --glob '!.git/' {pwd} | fzf -m --ansi --preview 'bat --color=always {}' --bind shift-up:preview-page-up,shift-down:preview-page-down",
							"commandIdentifier": "Find files by name (Current folder)",
							"script": "openFile"
						},
						{
							"shellCommand": "rg --files --hidden --glob '!.git/' {workspaceFolders} | fzf -m --ansi --preview 'bat --color=always {}' --bind shift-up:preview-page-up,shift-down:preview-page-down",
							"commandIdentifier": "Find files by name (All open folders)",
							"script": "openFile"
						},
						{
							"shellCommand": "rg --files --hidden --glob '!.git/' {configuredFolders} | fzf -m --ansi --preview 'bat --color=always {}' --bind shift-up:preview-page-up,shift-down:preview-page-down",
							"commandIdentifier": "Find files by name (Configured folders)",
							"script": "openFile"
						},
						{
							"shellCommand": "rg --column --line-number --no-heading --color=never --smart-case . {pwd} | {sedReplaceDelimiter} | {awkInsertLineRange} | fzf -m --delimiter :: --ansi --preview 'bat --color=always {1} --highlight-line {2} --line-range {3}:{4}' --bind shift-up:preview-page-up,shift-down:preview-page-down",
							"commandIdentifier": "Find files by content (Current folder)",
							"script": "openFileAndJumpToLine"
						},
						{
							"shellCommand": "rg --column --line-number --no-heading --color=never --smart-case . {workspaceFolders} | {sedReplaceDelimiter} | {awkInsertLineRange} | fzf -m --delimiter :: --ansi --preview 'bat --color=always {1} --highlight-line {2} --line-range {3}:{4}' --bind shift-up:preview-page-up,shift-down:preview-page-down",
							"commandIdentifier": "Find files by content (All open folders)",
							"script": "openFileAndJumpToLine"
						},
						{
							"shellCommand": "rg --column --line-number --no-heading --color=never --smart-case . {configuredFolders} | {sedReplaceDelimiter} | {awkInsertLineRange} | fzf -m --delimiter :: --ansi --preview 'bat --color=always {1} --highlight-line {2} --line-range {3}:{4}' --bind shift-up:preview-page-up,shift-down:preview-page-down",
							"commandIdentifier": "Find files by content (Configured folders)",
							"script": "openFileAndJumpToLine"
						},
						{
							"shellCommand": "fd .git$ -td -H --absolute-path {configuredFolders} | {sedRemoveGitFromString} | fzf -m",
							"commandIdentifier": "Add folder to workspace (Configured folders)",
							"script": "addFolderToWorkspace"
						},
						{
							"shellCommand": "fd .git$ -td -H --absolute-path {configuredFolders} | {sedRemoveGitFromString} | fzf",
							"commandIdentifier": "Change to workspace (Configured folders)",
							"script": "changeToWorkspace"
						},
						{
							"shellCommand": "echo {workspaceFoldersLineBreak} | fzf -m",
							"commandIdentifier": "Remove folders from workspace",
							"script": "removeFromWorkspace"
						}
					],
					"items": {
						"type": "object",
						"title": "Command Object",
						"properties": {
							"shellCOmmand": {
								"type": "string",
								"description": "Shell command that will be executed"
							},
							"commandIdentifier": {
								"type": "string",
								"description": "Name identifier for the command"
							},
							"script": {
								"type": "string",
								"description": "The script that will be executed when there's new entries in the file"
							}
						}
					}
				}
			}
		}
	},
	"extensionDependencies": [
		"vscode.git"
	],
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.68.0",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "16.x",
		"@typescript-eslint/eslint-plugin": "^5.27.0",
		"@typescript-eslint/parser": "^5.27.0",
		"eslint": "^8.16.0",
		"glob": "^8.0.3",
		"mocha": "^10.0.0",
		"typescript": "^4.7.2",
		"@vscode/test-electron": "^2.1.3"
	}
}